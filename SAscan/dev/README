pSAscan - parallel external memory suffix array construction algorithm.
=======================================================================


Description
-----------

This package contains implementation of external memory algorithm called SAscan
constructing the suffix array from the paper

  Juha Kärkkäinen and Dominik Kempa,
  Engineering a Lightweight External Memory Suffix Array Construction Algorithm,
  In Proc. 2nd International Conference on Algorithms for Big Data (ICABD) 2014.


Compilation / usage
-------------------

1. Download http://libdivsufsort.googlecode.com/files/libdivsufsort-2.0.1.tar.gz
   and install. Make sure to compile libdivsufsort to static 64-bit libraries,
   i.e. set options in the main CMakeLists.txt to

   option(BUILD_SHARED_LIBS "Set to OFF to build static libraries" OFF)
   option(BUILD_DIVSUFSORT64 "Build libdivsufsort64" ON)

2. Compile SAscan using the provided Makefile

   $ cd src
   $ make

For usage, run program without parameters.


Troubleshooting
---------------

1. I am getting "Error: the limit on the maximum number of open
   "files is too small to perform the merging (...)".

Solution: The soft limit on the maximum number of opened files can be
increased with the "ulimit -n newlimit" command. However, the soft limit
cannot be increased beyond the hard limit, which is usually only few times
larger than the soft limit. Furthermore, this is a temporary solution that
needs to repeated every time a new session is started. To increase the
limits permanently, edit (as a root) the file /etc/security/limits.conf
and add the following lines at the end (including the asterisks):

* soft nofile 128000
* hard nofile 128000

This increases the limit to 128000 (use larger values if necessary). The
new limits apply (check with ulimit -n) after starting a new session.


Known issues
------------

Current version only works for inputs that do not contain bytes with value 255.


-- Terms of use

If you use this code for experiments in a research paper, please cite the
paper mentioned above and publish the URL from which you downloaded the code.


Helsinki, April 2014.
