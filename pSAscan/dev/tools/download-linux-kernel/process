################################################################################
# for every *.tar.xz package:
#  - unpack it
#  - count the number of *.c, *.h and *.S files inside and update the counter
#  - find all *.c, *.h and *.S files and concatenate them with the result
#  - delete the unpacked files (but leave the original *.tar.xz package)
################################################################################
# cd kernels;
# for f in *.tar.xz; do tar xf $f; done
cd kernels;
actdir=`pwd`
# rm -rf file_list
# touch file_list
rm -rf kernel.all
touch kernel.all
files_total=0
kernels_total=0
for files in `ls -vr *.tar.xz`; do
	echo $files
	kernels_total=$((kernels_total+1))
	filedir=`basename $files .tar.xz`
	mkdir $filedir
	cd $filedir
	tar -xf ../$files
	cd $actdir
	rm -rf number_of_files.txt
	# find $filedir -iname '*.[chS]' -type f -exec ls -l {} >> file_list \;
	find $filedir -iname '*.[chS]' -type f | wc -l > number_of_files.txt
	read number_of_files < number_of_files.txt
	rm -rf number_of_files.txt
	files_total=$((files_total + number_of_files))
	find $filedir -iname '*.[chS]' -type f -exec cat '{}' >> kernel.all \;
	# rm $files
	rm -rf $filedir
done
echo "kernels_total = $kernels_total"
echo "files_total = $files_total"

# cat file_list | awk '{ print $5 }' > file_sizes
# awk '{ sum += $1 } END { print sum }' file_sizes
# rm file_sizes
# rm file_list
# rm -rf kernels
